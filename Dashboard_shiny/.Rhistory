print(c)
print(a)
print(b)
print(c)
a=1
b=2
c=3
print(a)
print(b)
print(c)
help(lm)
vec = 1:1000
vec = 1:1000
sample(vec, 500)
vec
subset = sample(vec, 500)
subset
subset == vec[subset]
vec=10:15
vec[1:2]=1
vec
install.packages("swirl")
help(cut)
installed.packages("swirl")
library("swirl")
swirl()
5+7
x = 5 + 7
x <- 5 + 7
x
x <- x - 3
y = x-3
y <- x-3
y
info()
main()
swirl()
swirl()
swirl()
info()
skip()
skip()
z
z <- c(z, 555, z)
c(z, 555, z)
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
}
len = 10
fibvals = numeric(len)
fibvals[1] = 1
fibvals[2] = 1
for (i in 3:len) {
fibvals[i] = fibvals[i-1] + fibvals[i-2]
}
fibvals
fibonacci = numeric()
fibonacci[1] = 1
fibonacci[2] = 2
i <- 3
repeat {
fibonacci[i] <- fibonacci[i-1] + fibonacci[i-2]
if (fibonacci[i] > 4000000) break
i <- i + 1
}
# calculate the sum
fibonacci <- fibonacci[-length(fibonacci)]   # remove the last term
flag <- fibonacci %% 2 == 0  # find the indexes of even numbers
result <- sum(fibonacci[flag])
cat("The result is:", result, "\n")
a = c(John, Andrew, Thomas)
b = "@gmail.com"
paste(a, b, collapse="; "
a = c(John, Andrew, Thomas)
b = "@gmail.com"
paste(a, b, collapse="; "
paste(a, b, collapse="; ")
paste(a, b, collapse=", ")
a = c("John", "Andrew", "Thomas")
b = "@gmail.com"
paste(a, b, collapse="; ")
paste(a,b, collapse="; ")
paste(a, b, sep="",collapse="; ")
?rm
a = c("a", "b", "c", "d", "e")
as.vector(outer(a, a, combo=paste0))
a = c("a", "b", "c", "d", "e")
as.vector(outer(a, a, FUN=paste0))
as.vector(outer(a, a,))
paste(a, a)
a = c("a", "b", "c", "d", "e")
as.vector(outer(a, a, FUN=','))
as.vector(outer(a, a, FUN=' '))
as.vector(outer(a, a))
as.vector(outer(a, a, FUN = paste))
as.vector(outer(a, a, FUN = paste0))
myvec <- c(1:3)
mymat <- as.matrix(cbind(a = 6:15, b = 16:25, c= 26:35))
mymat
a  b  c
[1,]  6 16 26
[2,]  7 17 27
[3,]  8 18 28
[4,]  9 19 29
[5,] 10 20 30
[6,] 11 21 31
[7,] 12 22 32
[8,] 13 23 33
[9,] 14 24 34
[10,] 15 25 35
myvec <- c(1:3)
mymat <- as.matrix(cbind(a = 6:15, b = 16:25, c= 26:35))
mymat %*% myvec
install.packages("ggplot2")
library(ggplot2)
data(mpg)
str(mpg)
head(mpg, n=5)
V1 = select(mpg, year)
V2 = select(mpg, cyl)
V3 = select(mpg, cty)
V4 = select(mpg, hwy)
library(dplyr)
V1 = select(mpg, year)
V2 = select(mpg, cyl)
V3 = select(mpg, cty)
V4 = select(mpg, hwy)
print(head(V1, n=5))
unique(V2)
UniqueCyl = unique(V2)
mean(mpg, mpg$cty, UniqueCyl)
UniqueCyl = c(unique(V2))
mean(mpg, mpg$cty, UniqueCyl)
?mean
names(mpg)
subdata = select(mpg, V1=year, V2=cyl, V3=cty, V4=hwy)
names(mpg)
mpg %>% group_by(, cyl, cty)
mpg %>% group_by(cyl) %>% summarise(avg(cty))
mpg %>% group_by(cyl) %>% summarise(mean(cty))
mpg %>% group_by(cyl) %>% summarise(mean(cty), mean(hwy))
mpg %>% group_by(model) %>% summarise(max(city))
mpg %>% group_by(model) %>% summarise(max(cty))
names(mpg)
mpg %>% group_by(manufacturer) %>% summarise(max(cty))
mpg %>% group_by(manufacturer) %>% summarise(max(cty, n=5))
mpg %>% group_by(manufacturer) %>% summarise(max(cty))
manu = group_by(mpg,manufacturer)
summarise(manu, city_mpg = max(cty))
mpg %>% group_by(manufacturer) %>% summarise(arrange(desc(max(cty))))
mpg %>% group_by(manufacturer, model) %>% summarise(cty_mpg = max(cty)) %>% arrange(desc(cty_mpg))
##Question 2.1
mpg$ratioHVE = mpg$hwy / mpg$displ
##Question 2.2
mpg$ratioCVE = mpg$cty / mpg$displ
##Question 2.3
mpg %>% group_by(year,manufacturer) %>% summarise(avg_ratioHVE = mean(ratioHVE), avg_ratioCVE = mean(ratioCVE))
##Question 2.4
mpg %>% group_by(year,drv) %>% summarise(avg_ratioHVE = mean(ratioHVE)) %>% arrange(desc(avg_ratioHVE))
q()
install.packages("shiny")
library(shiny)
runExample("01_hello")
library(shiny)
shinyServer(function(input, output) {
})
}))
})
library(shiny)
shinyServer(function(input, output) {
})
library(shiny)
shinyServer(function(input, output) {
})
runApp('Dropbox/Lecture_Slides/ShinyExample')
runApp('Dropbox/Lecture_Slides/ShinyExample')
#ur.R
library(shiny)
shinyUI(fluidPage(
titlePanel("title panel")
# sidebarLayout(
#   sidebarPanel( "sidebar panel"),
#   mainPanel("main panel")
# )
))
runApp('Dropbox/Lecture_Slides/ShinyExample')
runApp('Dropbox/Lecture_Slides/ShinyExample')
runApp('Dropbox/Lecture_Slides/ShinyExample')
runApp('Dropbox/Lecture_Slides/ShinyExample')
runApp('Dropbox/Lecture_Slides/ShinyExample')
runApp('Dropbox/Lecture_Slides/ShinyExample')
runApp('Dropbox/Lecture_Slides/ShinyExample')
runApp('Dropbox/Lecture_Slides/ShinyExample')
runApp('Dropbox/Lecture_Slides/ShinyExample')
runApp('Dropbox/Lecture_Slides/ShinyExample')
runApp('Dropbox/Lecture_Slides/ShinyExample')
runApp('Dropbox/Lecture_Slides/ShinyExample')
runApp('Dropbox/Lecture_Slides/ShinyExample')
runApp('Dropbox/Lecture_Slides/ShinyExample')
runApp('Dropbox/Lecture_Slides/ShinyExample')
runApp('Dropbox/Lecture_Slides/ShinyExample')
runApp('Dropbox/Lecture_Slides/ShinyExample')
runApp('Dropbox/Lecture_Slides/ShinyExample')
runApp('Dropbox/Lecture_Slides/ShinyExample')
runApp('Dropbox/Lecture_Slides/new_app')
runApp('Dropbox/Lecture_Slides/new_app')
runApp(list(
ui = basicPage(
h2('The mtcars data'),
dataTableOutput('mytable')
),
server = function(input, output) {
output$mytable = renderDataTable({
mtcars
})
}
))
source('~/.active-rstudio-document', echo=TRUE)
install.packages("googleVis")
demo(googlVis)
library(googleVis)
demo(googleVis)
head(mtcars, n = 10)
scatter <- gvisScatterChart(mtcars[,c("wt", "mpg")])
plot(scatter,"chart")
source('~/.active-rstudio-document', echo=TRUE)
scatter <- gvisScatterChart(mtcars[,c("wt", "mpg")])
plot(scatter)
print(scatter)
title: 'New Headlines: A Visual Exploration'
title: 'News Headlines: A Visual Exploration'
shiny::runApp('Dropbox/Homework/frederickcheung_shiny')
runApp('Dropbox/Homework/frederickcheung_shiny')
runApp('Dropbox/Homework/frederickcheung_shiny')
runApp('github/bootcamp007_homework/10-13Shiny/JhonasttanRegalado')
runApp('Dropbox/Homework/frederickcheung_shiny')
runApp('Dropbox/Homework/frederickcheung_shiny')
runApp('Dropbox/Homework/frederickcheung_shiny')
runApp('Dropbox/Homework/frederickcheung_shiny')
runApp('Dropbox/Homework/frederickcheung_shiny')
runApp('github/bootcamp007_homework/10-13Shiny/conredwang')
runApp('github/bootcamp007_homework/10-13Shiny/JhonasttanRegalado')
shiny::runApp('Dropbox/Homework/frederickcheung_shiny')
runApp('Dropbox/Homework/frederickcheung_shiny')
runApp('Dropbox/Homework/frederickcheung_shiny')
runApp('Dropbox/Homework/frederickcheung_shiny')
library(shiny)
library(ggplot2)
data(mtcars)
mtcars$cyl <- as.factor(mtcars$cyl)
mtcars$vs <- as.factor(mtcars$vs)
mtcars$am <- as.factor(mtcars$am)
mtcars$gear <- as.factor(mtcars$gear)
mtcars$carb <- as.factor(mtcars$carb)
x <- switch(input$colCont,
"Displacement (cu.in.)" = 3,
"Gross horsepower" = 4,
"Rear axle ratio" = 5,
"Weight (1000 lbs)" = 6,
"1/4 mile time" = 7)
z <- switch(input$colDisc,
"Number of cylinders" = 2,
"V/S" = 8,
"Transmission (0 = automatic, 1 = manual)" = 9,
"Number of forward gears" = 10,
"Number of carburetors" = 11)
runApp('github/bootcamp007_homework/10-13Shiny/JhonasttanRegalado')
runApp('Dropbox/Homework/frederickcheung_shiny')
install.packages('devtools')
devtools::install_git('rstuio/shinyapps')
devtools::install_git('rstuio/shinyapps')
shiny::runApp('Dropbox/Projects_NYCDSA7/Shiny')
runApp('Dropbox/Projects_NYCDSA7/Shiny')
rm(list=ls())
shiny::runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
print(source('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny/updateSelectInput.R')$value)
print(source('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny/updateSelectInput.R')$value)
runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
shiny::runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
shiny::runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
shiny::runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
runApp('Dropbox/Projects_NYCDSA7/frederickcheung_shiny')
shiny::runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
?selectizeInput
runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
?dygraph
library(dygraph)
install.packages('dygraphs')
library(dygraphs)
runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
?dygraph
dygraph(lungDeaths)
source('~/.active-rstudio-document', echo=TRUE)
print graphvariables
runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
shiny::runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
runApp('github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny')
setwd("~/github/bootcamp007_project/Project2-Shiny/frederickcheung_Shiny")
healthdf <- readRDS("healthdf")
healthdfcountry <- unique(healthdf$Country.Name)
healthdfcat <- unique(healthdf$Topic)
healthdfcatindic <- unique(healthdf$Indicator.Name.x)
runApp()
library(shinydashboard)
runApp()
library(dygraphs)
runApp()
runApp()
runApp()
runApp()
colnames(lungDeaths)
colnames(healthdf)
length(col(healthdf))
ncol(healthdf)
runApp()
runApp()
runApp()
?s
?cbind
runApp()
runApp()
runApp()
healthdf <- readRDS("healthdf")
runApp()
View(healthdf)
runApp()
runApp()
runApp()
runApp()
runApp()
view(lungDeaths)
healthdfDate <- as.Date(healthdf$X1960, format = "%Y")
class(healthdf$X1960)
healthdfDate <- as.character(healthdf$X1960, format = "%Y")
healthdfDate <- as.Date(healthdf$X1960, format = "%Y")
healthdfDate <- as.Date(healthdf$X1960, format = "%Y", origin = "1960-01-01")
healthdfDate <- as.Date(as.character(healthdf$X1960, format = "%Y"))
class(lungDeaths)
class(healthdf)
install.packages('reshape')
library(reshape)
?drop
healthreshape <- t(healthdf)
healthreshape
View(healthreshape)
healthreshape <- as.data.frame(t(healthdf))
healthreshape
View(healthreshape)
desc(healthreshape)
View(healthreshape)
View(healthdf)
View(healthreshape)
View(healthreshape)
View(healthdf)
dim(healthreshape)
class(lungDeaths)
View(healthdf)
colnames(healthdf)
healthdf2 <- healthdf[,c(1:5,62:63,5:61)]
View(healthdf2)
healthdf2 <- healthdf[,c(1:4,62:63,5:61)]
View(healthdf2)
healthdf2 <- healthdf[,c(1,62:63,5:61)]
View(healthdf2)
healthreshape <- as.data.frame(t(healthdf2))
View(healthreshape)
View(healthdf2)
healthreshape$Country.Name <- sub('X', '')
colnames(healthreshape)
head(colnames(healthreshape))
healthreshape$49 <- sub('X', '')
healthreshape$49 <- sub('X', '')
gsub('X', '', healthreshape$49)
gsub('X', '', healthreshape["49"])
gsub('X', '', healthreshape[, "49"])
healthreshape[, "49"]
gsub('X', '', healthreshape[, "49"])
?gsub
healthreshape[, "49"]
healthreshape[, "49"][2]
healthreshape[, "49"][20]
names(healthreshape[, "49"])
class(healthreshape[, "49"])
names(healthreshape[, "49"])
gsub('X', '', names(healthreshape[, "49"])
)
shiny::runApp()
